# tasks/main.yaml for shipping role

# Use variables for database connection to make the role reusable

- name: Install prerequisite packages
  ansible.builtin.yum:
    name:
      - epel-release
      - maven
      - mysql
      - python3-PyMySQL
    state: present

- name: Create Roboshop application user
  ansible.builtin.user:
    name: roboshop
    system: yes
    state: present

- name: Ensure /app directory exists
  ansible.builtin.file:
    path: /app
    state: directory
    owner: roboshop
    group: roboshop

- name: install unzip
  ansible.builtin.yum:
    name: unzip
    state: present
    
- name: Download and unpack shipping artifact
  ansible.builtin.unarchive:
    src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
    dest: /app
    remote_src: yes
    owner: roboshop
    group: roboshop

- name: Build application with Maven
  ansible.builtin.command: mvn clean package
  args:
    chdir: /app

- name: Create shipping systemd service file from template
  ansible.builtin.template: # Use template module to inject variables
    src: shipping.service.j2
    dest: /etc/systemd/system/shipping.service

# --- FIX STARTS HERE: Corrected Database Operations ---

- name: Load the application schema (creates '{{ db_name }}' db and table)
  # This task runs a SQL script. We use the 'shipping' user, not 'root'.
  ansible.builtin.shell: "mysql -h {{ mysql_host }} -u{{ mysql_app_user }} -p{{ mysql_app_pass }} < /app/db/schema.sql"
  # This command is not idempotent by default, so we expect it to change state
  changed_when: true 

- name: Check if the table 'cities' exists and 'codes' does not
  ansible.builtin.shell: "mysql -h {{ mysql_host }} -u{{ mysql_app_user }} -p{{ mysql_app_pass }} -D {{ db_name }} -e 'SHOW TABLES;' | grep '^cities$'"
  register: cities_table_check
  changed_when: false
  ignore_errors: true # Ignore errors if 'cities' doesn't exist (it may have been renamed already)

- name: Rename the 'cities' table to 'codes'
  # Only run this if the 'cities' table was found in the previous step
  when: cities_table_check.rc == 0
  ansible.builtin.shell: "mysql -h {{ mysql_host }} -u{{ mysql_app_user }} -p{{ mysql_app_pass }} -D {{ db_name }} -e 'RENAME TABLE cities TO codes;'"

- name: Load the master data into the 'codes' table
  # Now we load data into the correctly named table 'codes'.
  # Note: This assumes master-data.sql loads into the table 'codes' or we rename the table first.
  ansible.builtin.shell: "mysql -h {{ mysql_host }} -u{{ mysql_app_user }} -p{{ mysql_app_pass }} -D {{ db_name }} < /app/db/master-data.sql"
  changed_when: true
  
# --- FIX ENDS HERE ---

- name: Start and enable the shipping service
  ansible.builtin.import_role:
    name: common
    tasks_from: reload-restart.yaml # Assuming the task file is reload-restart.yaml```

