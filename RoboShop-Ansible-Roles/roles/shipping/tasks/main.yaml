- name: Install prerequisite packages
  ansible.builtin.yum:
    name:
      - epel-release
      - maven
      - mysql
      - python3-PyMySQL
    state: present

- name: Create Roboshop application user
  ansible.builtin.user:
    name: roboshop
    system: yes
    state: present

- name: Ensure /app directory exists
  ansible.builtin.file:
    path: /app
    state: directory
    owner: roboshop
    group: roboshop

- name: Download and unpack shipping artifact
  ansible.builtin.unarchive:
    src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
    dest: /app
    remote_src: yes
    owner: roboshop
    group: roboshop

- name: Build application with Maven
  ansible.builtin.command: mvn clean package
  args:
    chdir: /app

- name: Load database schema and rename table
  block:
    # First, load the initial schema which creates the 'cities' database and table.
    - name: Load schema from file
      community.mysql.mysql_db:
        name: "{{ db_name }}" # Assumes db_name is 'cities' from your vars
        state: import
        target: /app/db/schema.sql
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_pass }}"

    # This is the new, crucial task to rename the table
    - name: Rename 'cities' table to 'codes'
      community.mysql.mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_pass }}"
        database: "{{ db_name }}"
        query: RENAME TABLE cities TO codes
      # This will fail if the table is already renamed, so we add a check first.
      when: "'cities' in (lookup('community.mysql.mysql_query', 'SHOW TABLES', database=db_name, login_host=db_host, login_user=db_user, login_password=db_pass) | map(attribute='Tables_in_cities') | list)"

    # Finally, load the data into the correctly named 'codes' table.
    - name: Load master data
      community.mysql.mysql_db:
        name: "{{ db_name }}"
        state: import
        target: /app/db/master-data.sql
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_pass }}"
